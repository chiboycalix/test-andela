{"version":3,"sources":["../../server/controllers/UserController.js"],"names":["UserController","req","res","body","firstName","lastName","otherName","email","phoneNumber","password","pat","file","path","console","log","i","users","length","push","id","userController"],"mappings":";;;;;;qjBAAA;;;AACA;;;;AACA;;;;;;;;IAGMA,c;;;;;;;+BACOC,G,EAAKC,G,EAAK;AAAA,sBAQfD,IAAIE,IARW;AAAA,UAEjBC,SAFiB,aAEjBA,SAFiB;AAAA,UAGjBC,QAHiB,aAGjBA,QAHiB;AAAA,UAIjBC,SAJiB,aAIjBA,SAJiB;AAAA,UAKjBC,KALiB,aAKjBA,KALiB;AAAA,UAMjBC,WANiB,aAMjBA,WANiB;AAAA,UAOjBC,QAPiB,aAOjBA,QAPiB;;AASnB,UAAMC,MAAMT,IAAIE,IAAJ,CAASQ,IAAT,CAAcC,IAA1B;AACAC,cAAQC,GAAR,CAAYJ,GAAZ;AACA,UAAI,CAACH,KAAD,IAAU,CAACE,QAAf,EAAyB;AACvB,eAAO,wBAAaP,GAAb,EAAkB,GAAlB,EAAuB,yBAAvB,CAAP;AACD;AACD,WAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIC,iBAAMC,MAA1B,EAAkCF,KAAK,CAAvC,EAA0C;AACxC,YAAIC,iBAAMD,CAAN,EAASR,KAAT,KAAmBA,KAAvB,EAA8B;AAC5B,iBAAO,wBAAaL,GAAb,EAAkB,GAAlB,EAAuB,sBAAvB,CAAP;AACD;AACF;AACDc,uBAAME,IAAN,CAAW;AACTC,YAAIH,iBAAMC,MAAN,GAAe,CADV;AAETb,4BAFS;AAGTC,0BAHS;AAITC,4BAJS;AAKTC,oBALS;AAMTE,0BANS;AAOTD,gCAPS;AAQTE;AARS,OAAX;AAUAG,cAAQC,GAAR,CAAYE,iBAAMA,iBAAMC,MAAN,GAAe,CAArB,CAAZ;AACA,aAAO,wBAAaf,GAAb,EAAkB,GAAlB,EAAuB,8BAAvB,EAAuDc,iBAAMA,iBAAMC,MAAN,GAAe,CAArB,CAAvD,CAAP;AACD;;;8BAEShB,G,EAAKC,G,EAAK;AAAA,uBACcD,IAAIE,IADlB;AAAA,UACVC,SADU,cACVA,SADU;AAAA,UACCC,QADD,cACCA,QADD;;AAElB,WAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAIC,iBAAMC,MAA1B,EAAkCF,KAAK,CAAvC,EAA0C;AACxC,YAAIC,iBAAMD,CAAN,EAASX,SAAT,KAAuBA,SAAvB,IAAoCY,iBAAMD,CAAN,EAASV,QAAT,KAAsBA,QAA9D,EAAwE;AACtE,iBAAO,wBAAaH,GAAb,EAAkB,GAAlB,EAAuB,kBAAvB,CAAP;AACD;AACF;AACD,aAAO,wBAAaA,GAAb,EAAkB,GAAlB,EAAuB,gBAAvB,CAAP;AACD;;;;;;AAGH,IAAMkB,iBAAiB,IAAIpB,cAAJ,EAAvB;kBACeoB,c","file":"UserController.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport users from '../db/userDB';\nimport httpResponse from '../helpers/response';\n\n\nclass UserController {\n  createUser(req, res) {\n    const { \n      firstName,\n      lastName,\n      otherName,\n      email, \n      phoneNumber, \n      password,\n    } = req.body;\n    const pat = req.body.file.path;\n    console.log(pat);\n    if (!email || !password) {\n      return httpResponse(res, 400, 'All fields are required');\n    }\n    for (let i = 0; i < users.length; i += 1) {\n      if (users[i].email === email) {\n        return httpResponse(res, 409, 'Email already exists');\n      }\n    }\n    users.push({\n      id: users.length + 1,\n      firstName,\n      lastName,\n      otherName,\n      email,\n      password,\n      phoneNumber,\n      pat,\n    });\n    console.log(users[users.length - 1]);\n    return httpResponse(res, 201, 'Account created successfully', users[users.length - 1]);\n  }\n\n  loginUser(req, res) {\n    const { firstName, lastName } = req.body;\n    for (let i = 0; i < users.length; i += 1) {\n      if (users[i].firstName === firstName && users[i].lastName === lastName) {\n        return httpResponse(res, 200, 'login successful');\n      }\n    }\n    return httpResponse(res, 404, 'user not found');\n  }\n}\n\nconst userController = new UserController();\nexport default userController;"]}