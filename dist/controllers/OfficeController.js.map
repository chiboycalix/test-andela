{"version":3,"sources":["../../server/controllers/OfficeController.js"],"names":["OfficeController","req","res","body","type","name","offices","push","id","length","officeId","params","i","parseInt","officeController"],"mappings":";;;;;;qjBAAA;;;AACA;;;;AACA;;;;;;;;IAEMA,gB;;;;;;;iCACSC,G,EAAKC,G,EAAK;AAAA,sBACED,IAAIE,IADN;AAAA,UACbC,IADa,aACbA,IADa;AAAA,UACPC,IADO,aACPA,IADO;;AAErB,UAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB;AAClB,eAAO,wBAAaH,GAAb,EAAkB,GAAlB,EAAuB,yBAAvB,CAAP;AACD;AACDI,yBAAQC,IAAR,CAAa;AACXC,YAAIF,mBAAQG,MAAR,GAAiB,CADV;AAEXL,kBAFW;AAGXC;AAHW,OAAb;AAKA,aAAO,wBAAaH,GAAb,EAAkB,GAAlB,EAAuB,6BAAvB,EAAsDI,mBAAQA,mBAAQG,MAAR,GAAiB,CAAzB,CAAtD,CAAP;AACD;;;+BAEUR,G,EAAKC,G,EAAK;AACnB,aAAO,wBAAaA,GAAb,EAAkB,GAAlB,EAAuB,SAAvB,EAAkCI,kBAAlC,CAAP;AACD;;;8BAESL,G,EAAKC,G,EAAK;AAAA,UACVQ,QADU,GACGT,IAAIU,MADP,CACVD,QADU;;AAElB,WAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIN,mBAAQG,MAA5B,EAAoCG,KAAK,CAAzC,EAA4C;AAC1C,YAAIN,mBAAQM,CAAR,EAAWJ,EAAX,KAAkBK,SAASH,QAAT,EAAmB,EAAnB,CAAtB,EAA8C;AAC5C,iBAAO,wBAAaR,GAAb,EAAkB,GAAlB,EAAuB,SAAvB,EAAkCI,mBAAQM,CAAR,CAAlC,CAAP;AACD;AACF;AACD,aAAO,wBAAaV,GAAb,EAAkB,GAAlB,EAAuB,uBAAvB,CAAP;AACD;;;;;;AAGH,IAAMY,mBAAmB,IAAId,gBAAJ,EAAzB;kBACec,gB","file":"OfficeController.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport offices from '../db/officeDB';\nimport httpResponse from '../helpers/response';\n\nclass OfficeController {\n  createOffice(req, res) {\n    const { type, name } = req.body;\n    if (!type || !name) {\n      return httpResponse(res, 400, 'All fields are required');\n    }\n    offices.push({\n      id: offices.length + 1,\n      type,\n      name,\n    });\n    return httpResponse(res, 201, 'Office created successfully', offices[offices.length - 1]);\n  }\n\n  getOffices(req, res) {\n    return httpResponse(res, 200, 'Success', offices);\n  }\n\n  getOffice(req, res) {\n    const { officeId } = req.params;\n    for (let i = 0; i < offices.length; i += 1) {\n      if (offices[i].id === parseInt(officeId, 10)) {\n        return httpResponse(res, 200, 'success', offices[i]);\n      }\n    }\n    return httpResponse(res, 404, 'Office does not exist');\n  }\n}\n\nconst officeController = new OfficeController();\nexport default officeController;\n"]}